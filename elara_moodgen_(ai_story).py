# -*- coding: utf-8 -*-
"""Elara_moodgen (AI_Story)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GGjByRqW1kouzznrcxYcOPzh5Apwvt8R
"""

# Colab Setup
!pip install openai diffusers transformers accelerate gradio --quiet

# Imports
import os
import torch
import gradio as gr
from diffusers import StableDiffusionPipeline
from openai import OpenAI
from google.colab import userdata  # Only for Colab

# API Key
api_key = userdata.get('Grok')  # Use your key stored in Colab
os.environ['OPENAI_API_KEY'] = api_key
client = OpenAI(base_url="https://api.groq.com/openai/v1")

#  Chatbot System Prompt
chat_model = "llama3-70b-8192"
system = """You are a creative and imaginative storyteller bot named Elara.
You write short, vivid, and engaging stories based on short prompts and moods.
Each story should be 4‚Äì6 lines long and match the selected genre/mood."""

# Load Stable Diffusion
pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    torch_dtype=torch.float16,
    use_safetensors=True
).to("cuda" if torch.cuda.is_available() else "cpu")

#  Main Function: Story + Image
def generate_story_and_image(prompt, mood, guidance_scale=10.0, steps=50):
    # Step 1: Generate story
    messages = [
        {"role": "system", "content": system},
        {"role": "user", "content": f"Write a short {mood.lower()} story about: {prompt}"}
    ]
    story_response = client.chat.completions.create(
        model=chat_model,
        messages=messages
    )
    story = story_response.choices[0].message.content

    # Step 2: Generate image based on original prompt
    image = pipe(prompt, guidance_scale=guidance_scale, num_inference_steps=steps).images[0]

    return story, image

# üéõ Gradio Interface
with gr.Blocks() as app:
    gr.Markdown("## üìñ Elara: Story + Image Generator with Mood")

    with gr.Row():
        user_prompt = gr.Textbox(label="Enter a Creative Prompt", placeholder="e.g., a time-traveling fox in Paris")

    with gr.Row():
        mood = gr.Dropdown(
            choices=["Fantasy", "Funny", "Sad", "Sci-Fi", "Adventure", "Romantic"],
            value="Fantasy",
            label="Choose Story Mood"
        )

    with gr.Row():
        guidance = gr.Slider(7.5, 20.0, value=10.0, step=0.5, label="Image Guidance Scale")
        steps = gr.Slider(10, 100, value=50, step=5, label="Inference Steps")

    with gr.Row():
        story_output = gr.Textbox(label="üìù Elara's Story", lines=6)
        image_output = gr.Image(label="üé® Illustration")

    submit = gr.Button("Generate Story + Image")
    submit.click(
        fn=generate_story_and_image,
        inputs=[user_prompt, mood, guidance, steps],
        outputs=[story_output, image_output]
    )

app.launch()